@page "/contacts";

@using ContactManagement.Data.Models;
@using ContactManagement.Services;

@inject IContactService contactService;
@inject IJSRuntime JsRuntime

<h3>Contacts</h3>

<a class="btn btn-success btn-sm mb3" href="contact">New Contact</a>

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Body</th>
            <th width="100px"></th>
        </tr>
    </thead>
    <tbody>
        @if (contactList == null)
        {
            <tr>
                <td>No Data</td>
            </tr>
        } else
        {
            @foreach(var contact in contactList)
            {
                <tr>
                    <td>@contact.Name</td>
                    <td>@contact.Email</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="contact/@contact.Id">
                            <span class="oi oi-pencil" aria-hidden="true"></span>
                        </a>
                        <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(() => Delete(contact.Id))">
                            <span class="oi oi-trash" aria-hidden="true"></span>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    List<ContactModel>? contactList = null;

    protected override async Task OnInitializedAsync()
    {
        contactList = await contactService.GetAll();
    }

    private async Task Delete(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");

        if (confirmed)
        {
            var deleted = await contactService.Delete(id);

            if (deleted != null)
            {
                contactList = await contactService.GetAll();
            }
        }
    }
}
